//#define _CRT_SECURE_NO_WARNINGS 1
//#include <stdio.h>
//1,
//A选手说：B第二，我第三；
//B选手说：我第二，E第四；
//C选手说：我第一，D第二；
//D选手说：C最后，我第三；
//E选手说：我第四，A第一；
//比赛结束后，每位选手都说对了一半，请编程确定比赛的名次。
//int main()
//{
//	int A=0, B=0, C=0, D=0, E=0;
//	for (A = 1; A<= 5; A++)
//	{                                                                    
//		for (B = 1; B <= 5; B++)
//		{
//			for (C = 1; C <= 5; C++)
//			{
//				for (D = 1; D <= 5; D++)
//				{
//					for (E = 1; E <= 5; E++)
//					{
//						if (((B == 2) + (A == 3) == 1)
//							&& ((B == 2) + (E == 4) == 1)
//							&& ((C == 1) + (D == 2) == 1)
//							&& ((C == 5) + (D == 3) == 1)
//							&& ((E == 4) + (A == 1) == 1))
//						{
//							if (((A != B) && (A != C) && (A != D) && (A != E))
//								&& ((B != C) && (B != D) && (B != E))
//								&& ((C != D) && (C != E))
//								&& ((D != E)))
//							{
//									printf("A=%d\nB=%d\nC=%d\nD=%d\nE=%d\n", A, B, C, D, E);
//							}
//						}
//					}
//				}
//			}
//		}
//	}
//	return 0;
//}
//
//
//2,
//日本某地发生了一件谋杀案，警察通过排查确定杀人凶手必为4个嫌疑犯
//的一个。以下为4个嫌疑犯的供词。
//A说：不是我。
//B说：是C。
//C说：是D。
//D说：C在胡说
//已知3个人说了真话，1个人说的是假话。
//现在请根据这些信息，写一个程序来确定到底谁是凶手。
//int main()
//{
//	int A=0, B=0, C=0, D=0,CD=0;
//	int i = 0;
//	for (i = 1; i <= 4; i++)
//	{
//		if (i == 1)//A说的假  
//		{
//			A = 1;  C = 1; D = 0; CD = 1; 
//		}
//		if (i == 2)//B说的假  
//		{
//			A = 0; C = 0; CD = 1; D = 0;
//		}
//		if (i == 3)//C说的假  
//		{
//			A = 0; C = 1; CD = 0; D = 0;
//		}
//		if (i == 4)//D的说的假  
//		{
//			A = 0; C = 1; CD = 1; D = 0;
//		}
//		if (A + B + C + D + CD == 1 && CD == D) 
//		{
//			printf("A=%d B=%d C=%d D=%d\n", A, B, C, D);
//		}
//	}a
//	return 0;
//}
//
//
//3,
//杨辉三角
//int main()
//{
//	int i,j,k;
//	int arr[20][20] = { 0 };
//	printf("请输入行数：");
//	scanf("%d", &k);
//	for (i = 0; i < k; i++)
//	{
//		arr[i][0] = 1;
//		arr[i][i] = 1;
//	}
//	for (i = 2; i < k; i++)
//	{
//		for (j = 1; j < i; j++)
//		{
//			arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];
//		}
//	}
//	for (i = 0; i<k; i++)
//	{
//		for (j = 0; j <= i; j++)
//		{
//			printf("%d\t", arr[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}
//
//
//
//
